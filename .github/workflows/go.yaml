name: Go
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run full test once a day
    - cron: '0 0 * * *'
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      # https://github.com/actions/setup-go
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.7
        id: go
      # Manage and run your integration tests with efficiency
      # https://github.com/ovh/venom
      - name: Install Venom
        run: |
          curl -o /usr/local/bin/venom https://github.com/ovh/venom/releases/download/$VENOM_VERSION/venom.linux-amd64 -L
          sudo chmod +x /usr/local/bin/venom
          ls -lha /usr/local/bin/venom
        env:
          VENOM_VERSION: v1.0.1
      - name: Show Venom version
        run: venom version
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true
      - name: Show GoReleaser version
        run: goreleaser --version
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Required: the version of golangci-lint is required
          # and must be specified without patch version:
          # we always use the latest patch version.
          version: v1.29
      - name: Build
        run: make build
      - name: Quick Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make test-short
        if: ${{ github.event_name == 'pull_request' }}
      - name: All Test
        env:
          # Access only to ec2 AMI api in read-only
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: make test
        if: ${{ github.event_name == 'schedule' }}
      - name: Run End to End tests
        run: make test-e2e
        env:
          IS_TTY: true # https://github.com/ovh/venom#use-venom-in-ci
          # Access only to ec2 AMI api in read-only
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
