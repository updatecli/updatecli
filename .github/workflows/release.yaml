---
name: Publish Release Assets
on:
  workflow_dispatch: null
  release:
    types: [published]
permissions: {}
jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      packages: write
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
      DOCKER_BUILDKIT: 1
    steps:
      - run: df -h
      - name: "node-cleanup"
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo docker builder prune -a
      - run: df -h
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Set up Go
        # https://github.com/actions/setup-go

        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          cache: false
          go-version: 1.25.3
        id: go
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          install-only: true
      - name: Show GoReleaser version
        run: goreleaser --version
      - name: Install Cosign
        uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@8e94d75ddd33f69f691467e42275782e4bfefe84 # v0.20.9
      - name: Generate access token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: generate_token
        with:
          app-id: ${{ secrets.UPDATECLIBOT_RELEASE_APP_ID }}
          private-key: ${{ secrets.UPDATECLIBOT_RELEASE_APP_PRIVKEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            updatecli
            homebrew-updatecli
      - name: Login to DockerHub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: GoReleaser
        if: success()
        env:
          AUR_KEY: ${{ secrets.AUR_KEY }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          make release
      - name: Clean up
        run: |
          rm -f ${HOME}/.docker/config.json
  dispatch:
    needs: build
    strategy:
      matrix:
        repositories: ["updatecli/website", "updatecli/updatecli-action", "updatecli/charts"]
    runs-on: ubuntu-latest
    steps:
      - name: Generate access token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: generate_token
        with:
          app-id: ${{ secrets.UPDATECLIBOT_RELEASE_APP_ID }}
          private-key: ${{ secrets.UPDATECLIBOT_RELEASE_APP_PRIVKEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            website
            updatecli-action
            charts
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v4
        with:
          # Accepted:
          # * PAT
          # * Fine grained token
          #   Required:
          #     * contents: read & write
          #     * metadata: read only
          token: ${{ steps.generate_token.outputs.token }}
          repository: ${{ matrix.repositories }}
          event-type: updatecli-release
