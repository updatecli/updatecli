---
name: Publish Release Assets
on:
  workflow_dispatch: null
  release:
    types: [published]
permissions: {}
jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
      packages: write
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      # https://github.com/actions/setup-go
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          cache: false
          go-version: 1.24.3
        id: go
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          install-only: true
      - name: Show GoReleaser version
        run: goreleaser --version
      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@9f7302141466aa6482940f15371237e9d9f4c34a # v0.19.0
      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        id: generate_homebrew_token
        with:
          app-id: ${{ secrets.UPDATECLIBOT_APP_ID }}
          private-key: ${{ secrets.UPDATECLIBOT_APP_PRIVKEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            updatecli
            homebrew-updatecli
      - name: GoReleaser
        if: success()
        env:
          AUR_KEY: ${{ secrets.AUR_KEY }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.generate_homebrew_token.outputs.token }}
        run: |
          make release
      - name: Clean up
        run: |
          rm -f ${HOME}/.docker/config.json
