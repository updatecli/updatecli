---
archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.adoc
      - LICENSE
      - completions/*
      - manpages/*

aurs:
  - homepage:  https://www.updatecli.io
    description: A declarative dependency management command line tool.
    maintainers:
      - 'Olivier Vernin <olivier at vernin dot me>'
      - 'Jonathan Neidel <aur at jneidel dot com>'
    license: 'Apache'
    private_key: '{{ .Env.AUR_KEY }}'
    git_url: 'ssh://aur@aur.archlinux.org/updatecli-bin.git'
    package: |-
      # bin
      install -Dm755 "./updatecli" "${pkgdir}/usr/bin/updatecli"
      # license
      install -Dm644 "./LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
      # completions
      install -Dm644 "./completions/updatecli.bash" "${pkgdir}/usr/share/bash-completion/completions/updatecli"
      install -Dm644 "./completions/updatecli.zsh" "${pkgdir}/usr/share/zsh/site-functions/_updatecli"
      install -Dm644 "./completions/updatecli.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/updatecli.fish"
      # man pages
      install -Dm644 "./manpages/updatecli.1.gz" "${pkgdir}/usr/share/man/man1/updatecli.1.gz"

before:
  hooks:
    - go mod tidy
    - go mod download
    - ./scripts/completions.sh
    - ./scripts/manpages.sh

brews:
  - name: updatecli
    folder: Formula
    repository:
      owner: updatecli
      name: homebrew-updatecli
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://updatecli.io/"
    description: 'Updatecli is a declarative dependency management command line tool.'
    license: 'Apache-2.0'
    test: |
      system "#{bin}/updatecli version"
    install: |-
      bin.install "updatecli"
      bash_completion.install "completions/updatecli.bash" => "updatecli"
      zsh_completion.install "completions/updatecli.zsh" => "_updatecli"
      fish_completion.install "completions/updatecli.fish"
      man1.install "manpages/updatecli.1.gz"

builds:
  - id: updatecli
    main: ./main.go
    binary: updatecli
    ldflags:
      - -w -s
      - -X "github.com/updatecli/updatecli/pkg/core/version.BuildTime={{.Date}}"
      - -X "github.com/updatecli/updatecli/pkg/core/version.GoVersion={{.Env.GOVERSION}}"
      - -X "github.com/updatecli/updatecli/pkg/core/version.Version={{ .Version }}"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm

changelog:
  ## Delegate Changelog to release-drafter
  skip: true

checksum:
  name_template: 'checksums.txt'

dockers:
  - image_templates:
      - 'updatecli/updatecli:{{ .Tag }}-amd64'
      - 'ghcr.io/updatecli/updatecli:{{ .Tag }}-amd64'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--no-cache"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    goos: linux
    goarch: amd64
    extra_files:
      - Makefile
  - image_templates:
      - 'updatecli/updatecli:{{ .Tag }}-arm64'
      - 'ghcr.io/updatecli/updatecli:{{ .Tag }}-arm64'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--no-cache"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    goos: linux
    goarch: arm64
    extra_files:
      - Makefile

docker_signs:
  - cmd: cosign
    artifacts: manifests
    output: true
    args:
      - 'sign'
      - '--yes'
      - '${artifact}@${digest}'

docker_manifests:
  - name_template: 'updatecli/updatecli:{{ .Tag }}'
    image_templates:
      - 'updatecli/updatecli:{{ .Tag }}-amd64'
      - 'updatecli/updatecli:{{ .Tag }}-arm64'
  - name_template: 'ghcr.io/updatecli/updatecli:{{ .Tag }}'
    image_templates:
      - 'ghcr.io/updatecli/updatecli:{{ .Tag }}-amd64'
      - 'ghcr.io/updatecli/updatecli:{{ .Tag }}-arm64'
  - name_template: 'updatecli/updatecli:latest'
    image_templates:
      - 'updatecli/updatecli:{{ .Tag }}-amd64'
      - 'updatecli/updatecli:{{ .Tag }}-arm64'
  - name_template: 'ghcr.io/updatecli/updatecli:latest'
    image_templates:
      - 'ghcr.io/updatecli/updatecli:{{ .Tag }}-amd64'
      - 'ghcr.io/updatecli/updatecli:{{ .Tag }}-arm64'

env:
  - GO111MODULE=on
  - CGO_ENABLED=0

nfpms:
  - file_name_template: '{{ .ProjectName }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    homepage: 'https://www.updatecli.io'
    description: 'Updatecli is a declarative dependency management command line tool.'
    maintainer: 'Olivier Vernin <olivier@vernin.me>'
    license: 'Apache-2.0'
    vendor: Updatecli
    section: utils
    formats:
      - apk
      - deb
      - rpm
    dependencies:
      - ca-certificates
    contents:
      - src: ./completions/updatecli.bash
        dst: /usr/share/bash-completion/completions/updatecli
        file_info:
          mode: 0644
      - src: ./completions/updatecli.fish
        dst: /usr/share/fish/vendor_completions.d/updatecli.fish
        file_info:
          mode: 0644
      - src: ./completions/updatecli.zsh
        dst:  /usr/share/zsh/vendor-completions/_updatecli
        file_info:
          mode: 0644
      - src: ./manpages/updatecli.1.gz
        dst: /usr/share/man/man1/updatecli.1.gz
        file_info:
          mode: 0644
      - src: ./LICENSE
        dst: /usr/share/doc/updatecli/copyright
        file_info:
          mode: 0644

snapshot:
  name_template: "{{ .Tag }}-next"

sboms:
  - artifacts: archive

signs:
  - cmd: cosign
    certificate: '${artifact}.pem'
    signature: "${artifact}.sig"
    output: true
    artifacts: checksum
    args:
      - sign-blob
      - '--yes'
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
