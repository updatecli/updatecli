name: "deps: bump major version for Golang package defined in go.mod"
pipelineid: "golang/gomod/major"

scms:
  default:
    kind: github
    spec:
      owner: updatecli
      repository: updatecli
      token: '{{ requiredEnv "UPDATECLI_GITHUB_TOKEN" }}'
      username: '{{ requiredEnv "UPDATECLI_GITHUB_ACTOR" }}'
      branch: main

actions:
    default:
        kind: github/pullrequest
        scmid: default
        spec:
          labels:
            - "dependencies"
            - "enhancement"

autodiscovery:
  scmid: default
  actionid:  default
  groupby: all 
  crawlers:
    golang/gomod:
      versionfilter:
        kind: semver
        pattern: majoronly
      ignore:
        - modules:
            # Ignoring the following modules as they do not publish release
            github.com/ProtonMail/go-crypto: ""
            # Ignoring the following modules as they do not publish release
            github.com/shurcooL/githubv4: ""
            # Ignore module using version matching constraint 1.x
            helm.sh/helm/v3: "1.x"
            # The remote version uses the version v0.0.0-20190318233801-ac98e3ecb4b0 which do not exists anymore
            # the patch version will try to fetch the version matching 0.0.x and finds nothing 
            github.com/iancoleman/orderedmap: ""
            # Same for https://pkg.go.dev/golang.org/x/time?tab=versions
            golang.org/x/time: ""
            # Same for https://pkg.go.dev/golang.org/x/time?tab=versions
            github.com/nirasan/go-oauth-pkce-code-verifier: ""
            # Same for https://pkg.go.dev/golang.org/x/time?tab=versions
            github.com/skratchdot/open-golang: ""
            k8s.io/utils: ""
            # https://pkg.go.dev/golang.org/x/exp?tab=versions
            golang.org/x/exp:
      only:
        # This repository contains other go.sum file used for testing.
        # So we want to be sure that we only update the one at the root of the repository
        - path: "go.mod"
